public page: https://github.com/apps/review-agent-prime

testing:
Review Agent:
npx smee -u https://smee.io/YqB94vEuKQJQXo4v -t http://localhost:3000/api/review
Code Agent:
npx smee -u https://smee.io/MF6U75MXyDtxZVI -t http://localhost:3000/api/code

PR BOT

Inline Comments in the pr - PENDING
- files with multiple chunk headers
log files that are too large.

in memory context cache

get the function for the hunk and use that as general context
get general scope:
- interfaces
- classes
- ignore new lines
- hunks spanning multiple scopes
- handle globabl scope
- changes in far enough apart within a single function will result in multiple hunks... Merge overlapping function contexts

more parsers (popularity):
- py
- java
- c#
- c, c++

better:
potentially build a call chain for functions in changes
upstream -> code change -> downstream


Better prompt

Need to try catch suggestions
Convert code suggestions into a proper function call


CODE BOT

Explicit file create functionality

Needs to comment done on original issue when exiting loop
JSON exception common

Doesn't always call fns (needs to stay within schema better)

break original goal into tasks
- accomplish list of tasks
Determine when goal is achieved

Need to be able to self determine when task is done, should not be limited to 5 steps!

move to next step after editing a file

MUST OPEN FILE BEFORE EDIT can be called on the file!
Breakdown each edit into steps before executing edit.
Embed and query goal against repo embeddings to get inital set of relevant files... Maybe preload context?

the edit function should insert NOT overwrite (this causes too many issues).
Does not take into account full context of the files, need to figure this out

relevantTask is not accurate (remove?)


how to determine when a task is achieved
- a task may take multiple steps


NOW!
Generalize to multiple repo types

Follow up with everyone on twitter + email
reach out to 10 potential users

TODO 10/22
- logging
- replay logging

DEBUG
- why did robert's pr get bad feedback?
-- https://github.com/r-cha/concerto/pull/31
